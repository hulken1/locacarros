<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>